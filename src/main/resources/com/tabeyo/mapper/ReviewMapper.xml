<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tabeyo.mapper.ReviewMapper">

	<!-- 점포리뷰목록 with paging -->
	<select id="getListWithPaging"
		resultType="com.tabeyo.domain.ReviewVO">
  		<![CDATA[ 
    	SELECT	rvNo,rvTitle,stars,rvWriter,regDate
    	FROM 	
    		(
    		SELECT /*+INDEX_DESC(tbl_review pk_review) */  
                   rownum rn,rvNo,rvTitle,stars,rvWriter,regDate
                 FROM	tbl_review
                 WHERE businNo = #{businNo},
  		]]>

		<include refid="criteria" />	 
    
  	<![CDATA[       
  				rownum <= #{pageNum} * #{amount}
  					)
                WHERE	rn > (#{pageNum}-1) * #{amount}
     ]]>
	</select>


	<!-- 점포리뷰수조회 -->
	<select id="getTotalReviewCount" resultType="long">
		SELECT COUNT(*)
		FROM tbl_review
		WHERE businNo =
		<include refid="businNo" />
		,
		<include refid="criteria" />
		rvNo > 0
	</select>

	<!-- 리뷰 조회 -->
	<select id="read" resultType="com.tabeyo.domain.ReviewVO">
		SELECT * FROM tbl_review WHERE
		businNo = #{businNo} , rvNo=#{rvNo}
	</select>

	<!-- 리뷰수정 -->
	<update id="update">
		UPDATE tbl_review
		SET rvTitle = #{rvTitle}, rvContent
		= #{rvContent}, rvWriter = #{rvWriter},
		updateDate = SYSDATE
		WHERE
		businNo = #{businNo} , rvNo = #{rvNo}
	</update>

	<!-- 리뷰 삭제 -->
	<delete id="delete">
		DELETE FROM tbl_review_reply WHERE businNo =
		#{businNo} , rvNo=#{rvNo};
		DELETE FROM tbl_review WHERE businNo = #{businNo} , bno=#{bno};
	</delete>

	<!-- 리뷰 등록 -->
	<insert id="insert">
		INSERT INTO
		tbl_review(rvNo,businNo,rvWriter,rvTitle,stars,rvContent)
		VALUES(SEQ_TBL_REVIEW_rvNo.nextval,businNo,
		#{rvWriter},#{rvTitle},#{stars},#{rvContent})
	</insert>

	<!-- 리뷰댓글카운트 -->
	<update id="updateReplyCnt">
		UPDATE tbl_review SET replycnt = replycnt + #{amount}
		WHERE bno = #{bno}
	</update>

	<!-- 쿼리보관 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="typeArr" item='type'>
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer LIKE '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
</mapper>